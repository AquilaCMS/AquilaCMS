name: Update AquilaCMS Version

on:
  push:
    branches: [ preprod ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Add new version in package.json
      run: |
        export packageFile=`cat package.json`
        export versionLine=`cat package.json | grep "version"`
        export versionLeft=${versionLine:14}
        export oldAquilaVersion=${versionLeft::-2}
        echo "Old version :"
        echo $oldAquilaVersion

        export todayDate=`date +%D | tr / .`
        export dayMonth=`echo ${todayDate::-3}`
        export year=`echo ${todayDate: -1}`
        export todayVersion="1.${year}${dayMonth}"
        echo "Today version :"
        echo $todayVersion

        if [[ $todayVersion = $oldAquilaVersion ]]; then
            export newAquilaVersion="${todayVersion}b"
        elif [[ $todayVersion = ${oldAquilaVersion::-1} ]]; then
            echo "Next suffixe processus"
            export suffixe=(b c d e f g h i j k l m n o p q r s t u v w x y z)
            for i in "${!suffixe[@]}"
            do
            if [[ ${oldAquilaVersion: -1} = ${suffixe[$i]} ]]; then
                export j=$i+1
                export newAquilaVersion="${todayVersion}${suffixe[$j]}"
                break
            fi
            done
        else
            export newAquilaVersion=$todayVersion
        fi

        echo "New version :"
        echo $newAquilaVersion

        #Enregistrement de la nouvelle version dans le info.json et push
        newInfoFile=${packageFile/$oldAquilaVersion/$newAquilaVersion}
        echo "$newInfoFile" > package.json
        git add --force package.json

        echo "newAquilaVersion=$newAquilaVersion" >> $GITHUB_ENV
    - name: Commit file
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "[skip ci] Updating automatically AquilaCMS version number (${newAquilaVersion})"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: 'preprod'